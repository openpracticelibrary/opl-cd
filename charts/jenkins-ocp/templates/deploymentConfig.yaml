apiVersion: apps.openshift.io/v1 
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
  name: {{ .Values.appName }} 
spec:
  replicas: 1
  selector:
    name: {{ .Values.appName }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ .Values.appName }}
    spec:
      containers:
      - env:
{{- if eq .Values.auth.enabled true }}
        - name: OPENSHIFT_ENABLE_OAUTH
          value: "true"
        - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
          value: "true"
{{- end }}
        - name: DISABLE_ADMINISTRATIVE_MONITORS
          value: {{ .Values.deployment.disableAdminMonitors | quote }}
        - name: KUBERNETES_MASTER
          value: https://kubernetes.default:443
        - name: KUBERNETES_TRUST_CERTIFICATES
          value: {{ .Values.deployment.trustCerts | quote }}
        - name: JENKINS_SERVICE_NAME
          value: {{ .Values.appName }}
        - name: JNLP_SERVICE_NAME
          value: {{ .Values.appName }}-jnlp 
        - name: ENABLE_FATAL_ERROR_LOG_FILE
          value: {{ .Values.deployment.enableFatalLog | quote }}
        - name: JENKINS_UC_INSECURE
          value: {{ .Values.deployment.insecureUC | quote }}
{{- if .Values.deployment.plugins }}
        - name: INSTALL_PLUGINS
          value: "{{ template "plugins" . }}"
{{- end }}
        image: ' '
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 420
          periodSeconds: 360
          timeoutSeconds: 240
        name: jenkins
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 3
          timeoutSeconds: 240
        resources:
          limits:
            memory: {{ .Values.deployment.memLimit }} 
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
{{- if eq .Values.persistence.enabled true }}
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: {{ .Values.appName }}-data
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: {{ .Values.appName }} 
{{- if eq .Values.persistence.enabled true }}
      volumes:
      - name: {{ .Values.appName }}-data
        persistentVolumeClaim:
          claimName: {{ .Values.appName }}
{{- end }}
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - jenkins
      from:
        kind: ImageStreamTag
        name: {{ .Values.deployment.imageStream.name }} 
        namespace: {{ .Values.deployment.imageStream.namespace }}
      lastTriggeredImage: ""
    type: ImageChange
  - type: ConfigChange
